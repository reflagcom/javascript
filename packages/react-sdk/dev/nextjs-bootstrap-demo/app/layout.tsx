import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import { Providers } from "@/components/Providers";
import { ReflagClient as ReflagNodeClient } from "@reflag/node-sdk";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const publishableKey = process.env.REFLAG_PUBLISHABLE_KEY || "";
const secretKey = process.env.REFLAG_SECRET_KEY || "";
const offline = process.env.CI === "true";

async function getBootstrappedFlags() {
  const serverClient = new ReflagNodeClient({
    secretKey,
    offline,
  });
  await serverClient.initialize();

  // In a real app, you'd get user/company from your auth system
  const flags = serverClient.getFlagsForBootstrap({
    user: {
      id: "demo-user",
      email: "demo-user@example.com",
      "optin-huddles": true,
    },
    company: { id: "demo-company", name: "Demo Company" },
    other: { source: "web" },
  });

  return flags;
}

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const flags = await getBootstrappedFlags();

  return (
    <html lang="en">
      <body className={inter.className}>
        <Providers publishableKey={publishableKey} flags={flags}>
          {children}
        </Providers>
      </body>
    </html>
  );
}
